// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  email     String   @unique
  password  String
  role      Role     @default(user)
  createdAt DateTime @default(now())
  Cart      Cart[]
  Order     Order[]
}

enum Role {
  admin
  user
}

model Product {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Int
  category    String
  stock       Int         @default(0)
  createdAt   DateTime    @default(now())
  CartItem    CartItem[]
  OrderItem   OrderItem[]
}

model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int     @default(1)
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  cart      Cart?   @relation(fields: [cartId], references: [id])
  cartId    String? @db.ObjectId
}

model Cart {
  id     String     @id @default(auto()) @map("_id") @db.ObjectId
  user   User       @relation(fields: [userId], references: [id])
  userId String     @db.ObjectId
  items  CartItem[]
}

enum Status {
  pending
  processing
  shipped
  delivered
  cancelled
}

model OrderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String  @db.ObjectId
}

model Order {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  user       User        @relation(fields: [userId], references: [id])
  userId     String      @db.ObjectId
  totalPrice Int
  status     Status      @default(pending)
  createdAt  DateTime    @default(now())
  items      OrderItem[]
}
